<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
       http://www.springframework.org/schema/data/jpa 
       http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
       ">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:/mysqldb.properties"/>
	</bean>

	<bean id="dataSource"
		class="org.apache.tomcat.dbcp.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url"
			value="${jdbc.connectionUrl}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:hibernate.cfg.xml" />


		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${jdbc.hibernateDialect}
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			
			</props>
		</property>
	</bean>


  <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    
     <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
     
    
	<!-- <bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean> -->

	<aop:config>
		<!-- <aop:pointcut id="webMethods" expression="execution(* com.gj.SpringMVCHibernate.web.*.*(..))" /> -->
		<aop:pointcut id="serivceMethods" expression="execution(* com.gj.spring.service.*.*(..))" />
		<!-- <aop:advisor advice-ref="txAdvice" pointcut-ref="webMethods" /> -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serivceMethods" />	
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	
	
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <property name="packagesToScan" value="com.gj.spring.model"/>
        <property name="jpaProperties">
            <props>
                <!--
                    Configures the used database dialect. This allows Hibernate to create SQL
                    that is optimized for the used database.
                -->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>

                <!--
                    Specifies the action that is invoked to the database when the Hibernate
                    SessionFactory is created or closed.
                -->
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>

                <!--
                    Configures the naming strategy that is used when Hibernate creates
                    new database objects and schema elements
                -->
                <prop key="hibernate.ejb.naming_strategy">${hibernate.ejb.naming_strategy}</prop>

                <!--
                    If the value of this property is true, Hibernate writes all SQL
                    statements to the console.
                -->
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>

                <!--
                    If the value of this property is true, Hibernate will use prettyprint
                    when it writes SQL to the console.
                -->
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
            </props>
        </property>
    </bean>

  <!--   <bean id="auditingProvider" class="net.petrikainulainen.springdata.jpa.common.UsernameAuditorAware"/>

    <bean id="dateTimeProvider" class="net.petrikainulainen.springdata.jpa.common.AuditingDateTimeProvider">
        <constructor-arg index="0" ref="dateTimeService"/>
    </bean>

    <jpa:auditing auditor-aware-ref="auditingProvider" set-dates="true"/> -->
    <jpa:repositories base-package="com.gj.spring.model"/>

</beans>